from django.core.management.base import BaseCommand
from accounts.models import Province, City


class Command(BaseCommand):
    help = 'Populate database with Iranian provinces and cities'

    def handle(self, *args, **options):
        # Iranian provinces and their major cities
        provinces_data = {
            'تهران': ['تهران', 'کرج', 'ورامین', 'اسلامشهر', 'ری', 'شهریار', 'ملارد', 'پاکدشت', 'بهارستان', 'قدس'],
            'اصفهان': ['اصفهان', 'کاشان', 'نجف‌آباد', 'خمینی‌شهر', 'شاهین‌شهر', 'مبارکه', 'لنجان', 'نطنز', 'اردستان', 'نایین'],
            'فارس': ['شیراز', 'کازرون', 'جهرم', 'مرودشت', 'فسا', 'داراب', 'لار', 'لامرد', 'فراشبند', 'کوار'],
            'خراسان رضوی': ['مشهد', 'نیشابور', 'سبزوار', 'کاشمر', 'تربت حیدریه', 'تربت جام', 'قوچان', 'کلات', 'فریمان', 'چناران'],
            'آذربایجان شرقی': ['تبریز', 'مراغه', 'میانه', 'شبستر', 'اهر', 'بناب', 'سراب', 'هشترود', 'ملکان', 'آذرشهر'],
            'مازندران': ['ساری', 'بابل', 'آمل', 'قائمشهر', 'بابلسر', 'نوشهر', 'چالوس', 'تنکابن', 'رامسر', 'نکا'],
            'گیلان': ['رشت', 'بندر انزلی', 'لاهیجان', 'لنگرود', 'رودسر', 'فومن', 'صومعه‌سرا', 'آستارا', 'تالش', 'رودبار'],
            'خوزستان': ['اهواز', 'آبادان', 'خرمشهر', 'دزفول', 'شوش', 'اندیمشک', 'مسجدسلیمان', 'ایذه', 'بندر ماهشهر', 'هندیجان'],
            'کرمان': ['کرمان', 'رفسنجان', 'جیرفت', 'بم', 'سیرجان', 'شهربابک', 'بردسیر', 'کهنوج', 'قلعه گنج', 'رودبار جنوب'],
            'سیستان و بلوچستان': ['زاهدان', 'زابل', 'چابهار', 'ایرانشهر', 'خاش', 'سراوان', 'نیکشهر', 'کنارک', 'دلگان', 'فنوج'],
            'لرستان': ['خرم‌آباد', 'بروجرد', 'دورود', 'الیگودرز', 'کوهدشت', 'نورآباد', 'ازنا', 'سلسله', 'رومشکان', 'پل‌دختر'],
            'همدان': ['همدان', 'ملایر', 'نهاوند', 'تویسرکان', 'کبودراهنگ', 'بهار', 'رزن', 'فامنین', 'اسدآباد', 'قروه'],
            'یزد': ['یزد', 'میبد', 'اردکان', 'بافق', 'ابرکوه', 'تفت', 'بهاباد', 'هرات', 'اشکذر', 'بندرعباس'],
            'هرمزگان': ['بندرعباس', 'میناب', 'قشم', 'کیش', 'بندر لنگه', 'رودان', 'جاسک', 'بستک', 'پارسیان', 'سیریک'],
            'کردستان': ['سنندج', 'مریوان', 'سقز', 'قروه', 'بیجار', 'کامیاران', 'بانه', 'دیواندره', 'سروآباد', 'دهگلان'],
            'کرمانشاه': ['کرمانشاه', 'اسلام‌آباد غرب', 'هرسین', 'کنگاور', 'صحنه', 'سنقر', 'قصرشیرین', 'گیلان غرب', 'ثلاث باباجانی', 'جوانرود'],
            'چهارمحال و بختیاری': ['شهرکرد', 'بروجن', 'فارسان', 'لردگان', 'اردل', 'کوهرنگ', 'کیان', 'سامان', 'بن', 'نافچ'],
            'کهگیلویه و بویراحمد': ['یاسوج', 'دوگنبدان', 'سی‌سخت', 'لیکک', 'مارگون', 'چرام', 'بویراحمد', 'دنا', 'بهمئی', 'لنده'],
            'ایلام': ['ایلام', 'دهلران', 'آبدانان', 'دره‌شهر', 'مهران', 'سرابله', 'چرداول', 'ملکشاهی', 'بدره', 'هلیلان'],
            'بوشهر': ['بوشهر', 'برازجان', 'گناوه', 'کنگان', 'عسلویه', 'جم', 'دشتستان', 'تنگستان', 'دیلم', 'بندر ریگ'],
            'زنجان': ['زنجان', 'ابهر', 'خدابنده', 'خرمدره', 'ماهنشان', 'ایجرود', 'طارم', 'سلطانیه', 'مهرگان', 'نیک‌پی'],
            'اردبیل': ['اردبیل', 'پارس‌آباد', 'خلخال', 'مشگین‌شهر', 'گرمی', 'بیله‌سوار', 'کوثر', 'سرعین', 'نمین', 'نیر'],
            'قزوین': ['قزوین', 'تاکستان', 'آبیک', 'بوئین‌زهرا', 'آوج', 'الوند', 'محمودآباد', 'ضیاءآباد', 'کوهین', 'معلم‌کلایه'],
            'قم': ['قم', 'کهک', 'سلفچگان', 'قنوات', 'جعفریه', 'ساوه', 'زرندیه', 'تفرش', 'آشتیان', 'کمیجان'],
            'البرز': ['کرج', 'نظرآباد', 'فردیس', 'ساوجبلاغ', 'طالقان', 'ماهدشت', 'مشکین‌دشت', 'هشتگرد', 'کمال‌شهر', 'گرمدره'],
            'گلستان': ['گرگان', 'علی‌آباد کتول', 'آق‌قلا', 'گنبد کاووس', 'مینودشت', 'کردکوی', 'بندر گز', 'فاضل‌آباد', 'کلاله', 'مراوه‌تپه'],
            'سمنان': ['سمنان', 'شاهرود', 'دامغان', 'بسطام', 'مهدیشهر', 'میامی', 'آرادان', 'گرمسار', 'کلاته خیج', 'بیارجمند'],
            'مرکزی': ['اراک', 'ساوه', 'خمین', 'محلات', 'دلیجان', 'تفرش', 'آشتیان', 'کمیجان', 'شازند', 'زرندیه'],
            'ایلام': ['ایلام', 'دهلران', 'آبدانان', 'دره‌شهر', 'مهران', 'سرابله', 'چرداول', 'ملکشاهی', 'بدره', 'هلیلان']
        }

        created_count = 0
        for province_name, cities in provinces_data.items():
            province, created = Province.objects.get_or_create(name=province_name)
            if created:
                created_count += 1
                self.stdout.write(f'Created province: {province_name}')
            
            for city_name in cities:
                city, city_created = City.objects.get_or_create(
                    name=city_name,
                    province=province
                )
                if city_created:
                    created_count += 1
                    self.stdout.write(f'Created city: {city_name} in {province_name}')

        self.stdout.write(
            self.style.SUCCESS(f'Successfully populated {created_count} provinces and cities')
        )
